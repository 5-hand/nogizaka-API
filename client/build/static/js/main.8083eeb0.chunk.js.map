{"version":3,"sources":["style/img/defaultImg.jpg","reducers/membersReducer.tsx","actions/members/membersConstants.tsx","reducers/index.tsx","store/index.tsx","actions/members/membersActions.tsx","api/MemberApiFactory.tsx","saga/member.tsx","saga/index.tsx","style/BaseStyle.tsx","style/commonStyle.tsx","components/Atoms/Wrapper/index.tsx","components/Atoms/Img/index.tsx","util/styles.ts","components/Atoms/Button/index.tsx","components/Atoms/Input/index.tsx","components/Atoms/Paragragh/index.tsx","components/Molecules/InputSectoins/index.tsx","components/Molecules/Buttons/index.tsx","components/Organisms/Form/AdminForm/index.tsx","cotainers/Organisms/Form/AdminForm/index.tsx","components/Atoms/Select/index.tsx","components/Atoms/Option/index.tsx","components/Molecules/Selects/index.tsx","components/Organisms/Form/UpdateForm/index.tsx","cotainers/Organisms/Form/UpdateForm/index.tsx","components/Pages/Admin/index.tsx","cotainers/Pages/Admin/index.tsx","components/App.tsx","cotainers/App.tsx","index.tsx"],"names":["module","exports","defaultState","members","token","loading","isPermission","MembersReducer","state","action","type","payload","rootReducer","combineReducers","sagaMiddleWare","createSagaMiddleware","store","createStore","applyMiddleware","logger","changeLoading","storageMembers","DEFAULT_API_CONFIG","baseURL","timeout","MemberApiFactory","optionConfig","localStorage","getItem","config","headers","Authorization","instance","axios","create","apiOption","a","response","status","Error","addMember","updateMember","deleteMember","getAllMembers","memberActions","memberData","api","method","data","url","put","MembersAction","call","result","error","alert","message","removeItem","memberId","takeLatest","watchAllActions","rootSaga","fork","all","GlobalStyle","createGlobalStyle","reset","mediaQuery","lessThan","styled","div","props","justify_content","align_items","button","width","bgColor","margin","padding","Wrapper","display","flex_direction","flex_wrap","max_width","min_width","max_height","min_height","height","position","top","left","right","bottom","transform","z_index","text_align","Img","img","font_size","color","Button","utilStyle","border","Input","input","border_radius","Paragragh","p","font_weight","wrapperWidth","lineWidth","InputTitle","InputSections","Fragment","inputs","map","index","baseWrapperStyle","wrapperStyle","key","baseInputTitleStyle","inputTitleStyle","title","baseInputStyle","inputStyle","Buttons","buttons","baseButtonWrapperStyle","buttonWrapperStyle","baseButtonStyle","buttonStyle","onClick","clickHandler","buttonTxt","baseInputWrapperStyle","initialState","image","name","sailium","segment","dateOfBirth","blod","hash","AdminForm","useEffect","useState","memberState","memberChange","setStringHandler","event","target","value","setArrayHandler","split","InputSectionsProps","accept","placeholder","required","onChange","files","length","file","fileReader","FileReader","onloadend","dataUri","this","readAsDataURL","ButtonsProps","Imgsrc","defaultImage","src","onSubmit","e","preventDefault","postData","upload","document","querySelector","submitHandler","to","connect","dispatch","member","Action","Select","select","appearance","Option","option","Selects","selectStyle","selectProps","options","baseOptionStyle","optionStyle","txt","_id","UpdateForm","history","useReactRouter","buttonIndex","setButtonIndex","setIndex","console","log","push","initialMemberState","clearInputValue","query","SelectsProps","forEach","updateData","update","delete","Admin","isStorageToken","Helmet","path","component","LoadingWrapper","App","size","ReactDOM","render","getElementById","run"],"mappings":"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","file":"static/js/main.8083eeb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultImg.bf484b36.jpg\";","import { Reducer } from 'redux'\nimport { MembersAction } from '../actions/members/membersActions'\nimport * as ActionType from '../actions/members/membersConstants'\n\n\nexport const initialState  = {\n    members: [\n        {\n            _id: '',\n            image: '',\n            name: ['',''],\n            sailium: ['', ''],\n            segment: '',\n            dateOfBirth : '',\n            blod: '',\n            height: '',\n            hash:['']\n        }\n    ],\n    token: '',\n    loading: false,\n    isPermission: false\n}\n\nexport const defaultState = {\n    members: [] as membersState,\n    token: '',\n    loading: false,\n    isPermission: false\n}\n\nexport type membersState = typeof initialState.members\nexport type MembersState= typeof initialState\nexport type Member = typeof initialState.members[0]\n\nconst MembersReducer : Reducer<MembersState, MembersAction> = (state : MembersState = defaultState, action : MembersAction) => {\n    switch(action.type) {\n        case ActionType.MEMBERS_STORAGE_MEMBERS : \n            return {\n                ...state,\n                members: action.payload\n            }\n        case ActionType.MEMBERS_CHANGE_LOADING :\n            return {\n                ...state,\n                ...action.payload\n            }\n        case ActionType.MEMBERS_CHANGE_PERMISSION :\n            return {\n                ...state,\n                ...action.payload\n            }\n        default : \n            return state\n    }\n}\n\nexport default MembersReducer","export const MEMBERS_MEMBER_ADD = 'MEMBERS_MEMBER_ADD'\nexport const MEMBERS_MEMBER_UPDATE = 'MEMBERS_MEMBER_UPDATE'\nexport const MEMBERS_MEMBER_DELETE = 'MEMBERS_MEMBER_DELETE'\nexport const MEMBERS_GET_ALLMEMBERS = 'MEMBERS_GET_ALLMEMBERS'\nexport const MEMBERS_STORAGE_MEMBERS = 'MEMBERS_STORAGE_MEMBERS'\nexport const MEMBERS_CHANGE_LOADING = 'MEMBERS_CHANGE_LOADING'\nexport const MEMBERS_CHANGE_PERMISSION = 'MEMBERS_CHANGE_PERMISSION'","import { combineReducers } from 'redux'\nimport MembersReducer, { MembersState } from './membersReducer'\n\n\nexport type StateValue = MembersState\nexport type State = {\n    members: MembersState\n}\n\nconst rootReducer = combineReducers({\n    members: MembersReducer,\n})\n\nexport default rootReducer","import rootReducer from '../reducers'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport logger from 'redux-logger'\n\nexport const sagaMiddleWare = createSagaMiddleware()\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(logger,sagaMiddleWare)\n)\n\nexport default store","import { MemberState as addMemberState } from '../../components/Organisms/Form/AdminForm'\nimport { MemberState as updateMemberState } from '../../components/Organisms/Form/UpdateForm'\nimport { membersState} from '../../reducers/membersReducer'\nimport * as ActionType from './membersConstants'\n\nexport const changeLoading = (loading: boolean) => ({\n    type: ActionType.MEMBERS_CHANGE_LOADING as typeof ActionType.MEMBERS_CHANGE_LOADING,\n    payload: {\n        loading\n    }\n})\n\nexport const changePermission = (isPermission: boolean) => ({\n    type: ActionType.MEMBERS_CHANGE_PERMISSION as typeof ActionType.MEMBERS_CHANGE_PERMISSION,\n    payload: {\n        isPermission\n    }\n})\n\nexport const addMember = (member : addMemberState) => ({\n    type: ActionType.MEMBERS_MEMBER_ADD as typeof ActionType.MEMBERS_MEMBER_ADD,\n    payload: {...member} \n})\n\nexport const updateMember = (member : updateMemberState) => ({\n    type: ActionType.MEMBERS_MEMBER_UPDATE as typeof ActionType.MEMBERS_MEMBER_UPDATE,\n    payload: {...member}\n})\n\nexport const deleteMember = (memberId: string) => ({\n    type: ActionType.MEMBERS_MEMBER_DELETE as typeof ActionType.MEMBERS_MEMBER_DELETE,\n    payload: memberId\n})\n\nexport const getAllMembers = () => ({\n    type: ActionType.MEMBERS_GET_ALLMEMBERS as typeof ActionType.MEMBERS_GET_ALLMEMBERS,\n})\n\nexport const storageMembers = (members: membersState) => ({\n    type: ActionType.MEMBERS_STORAGE_MEMBERS as typeof ActionType.MEMBERS_STORAGE_MEMBERS,\n    payload: members\n})\n\nexport type MembersAction = \n    |ReturnType<typeof changeLoading>\n    |ReturnType<typeof changePermission>\n    |ReturnType<typeof addMember>\n    |ReturnType<typeof updateMember>\n    |ReturnType<typeof deleteMember>\n    |ReturnType<typeof getAllMembers>\n    |ReturnType<typeof storageMembers>","import axios, { Method } from 'axios'\nimport {MemberState} from '../components/Organisms/Form/AdminForm'\n\ninterface optionConfig {\n    [k : string] : string | object | undefined\n}\n\ninterface apiOption {\n    method: Method,\n    url: string, \n    data?: MemberState | {memberId: string},\n}\n\nconst DEFAULT_API_CONFIG = {\n    baseURL: '/member',\n    timeout: 7000,\n};\n\nexport const MemberApiFactory = (optionConfig? : optionConfig) => {\n    const token = localStorage.getItem(\"ticket\")\n    const config = {\n        ...DEFAULT_API_CONFIG,\n        ...optionConfig,\n        headers: {Authorization: token}\n    }\n\n    const instance = axios.create(config);\n\n    const MemberApiConnector = async (apiOption: apiOption) => {\n        try {\n            const response = await instance({\n                ...apiOption\n            });\n\n            if(response.status !== 200) {\n                throw new Error(`Server Error`);\n            }\n            return response;\n        }catch(err) {\n            throw err;\n        }\n    };\n    return MemberApiConnector\n}","import \n    { \n        // all,  fork, \n        put, call, takeLatest} \nfrom 'redux-saga/effects'\nimport * as Action from '../actions/members/membersConstants'\nimport * as MembersAction from '../actions/members/membersActions'\nimport { MemberApiFactory } from '../api/MemberApiFactory'\n\nfunction* addMember(action : ReturnType<typeof MembersAction.addMember>){\n    const memberData = action.payload;\n    \n    try{\n        const api = MemberApiFactory();\n        const apiOption = {\n            method: 'post' as 'post', \n            data: memberData, \n            url: '/upload'\n        }\n        yield put(MembersAction.changeLoading(true))\n        const result = yield call(api, apiOption)\n        yield put(MembersAction.changeLoading(false))\n        const data = result.data\n        if(data.error){\n            alert(data.message)\n            yield localStorage.removeItem('ticket')\n        } else {\n            yield put(MembersAction.storageMembers(data.members))\n            alert(data.message)\n        }\n    }catch(error) {\n        yield alert(error)\n        yield put(MembersAction.changeLoading(false))\n    }\n}\n\nfunction* updateMember(action : ReturnType<typeof MembersAction.updateMember>){\n    const memberData = action.payload\n    try{\n        const api = MemberApiFactory();\n        const apiOption = {\n            method: 'put' as 'put',\n            data: memberData,\n            url: '/update'\n        }\n        yield put(MembersAction.changeLoading(true))\n        const result = yield call(api, apiOption)\n        yield put(MembersAction.changeLoading(false))\n        const data = result.data\n        if(data.error){\n            alert(data.message)\n            yield localStorage.removeItem('ticket')\n        } else {\n            yield alert(data.message)\n            yield put(MembersAction.storageMembers(data.members))\n        }\n    }catch(error) {\n        yield alert(error)\n        yield put(MembersAction.changeLoading(false))\n    }\n}\n\nfunction* deleteMember(action: ReturnType<typeof MembersAction.deleteMember>) {\n    const memberId = action.payload;\n    try {\n        const api = MemberApiFactory();\n        const apiOption = {\n            method: 'delete' as 'delete',\n            data: {memberId},\n            url: '/delete'\n        }\n        yield put(MembersAction.changeLoading(true))\n        const result = yield call(api, apiOption)\n        yield put(MembersAction.changeLoading(false))\n        const data = result.data\n        if(data.error){\n            alert(data.message)\n            yield localStorage.removeItem('ticket')\n        } else {\n            yield alert(data.message)\n            yield put(MembersAction.storageMembers(data.members))\n        }\n    }catch(error) {\n        yield alert(error)\n        yield put(MembersAction.changeLoading(false))\n    }\n}\n\nfunction* getAllMembers(){\n    try{\n        const api = MemberApiFactory();\n        const apiOption = {\n            method: 'get' as 'get',\n            url: '/members'\n        }\n        yield put(MembersAction.changeLoading(true))\n        const result = yield call(api, apiOption)\n        yield put(MembersAction.changeLoading(false))\n        const data = result.data\n        if(data.error){\n            alert(data.message)\n            yield localStorage.removeItem('ticket')\n        } else {\n            yield put(MembersAction.storageMembers(data.members))\n        }\n    }catch(error) {\n        yield alert(error)\n        yield put(MembersAction.changeLoading(false))\n    }\n}\n\nexport default function* memberActions() {\n    yield takeLatest (Action.MEMBERS_MEMBER_ADD, addMember)\n    yield takeLatest (Action.MEMBERS_MEMBER_UPDATE, updateMember)\n    yield takeLatest (Action.MEMBERS_MEMBER_DELETE, deleteMember)\n    yield takeLatest (Action.MEMBERS_GET_ALLMEMBERS, getAllMembers)\n}","import { all, fork } from 'redux-saga/effects'\nimport memberActions from './member'\n\nexport function* watchAllActions() {\n    yield fork(memberActions)\n}\n\nexport default function* rootSaga() {\n    yield all([fork(watchAllActions)])\n} ","import reset from 'styled-reset'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n    ${reset}\n    html{\n        font-family: sans-serif;\n        font-size: 62.5%;\n    }\n    html * {\n        box-sizing: border-box;\n    }\n    a:hover, button:hover {\n        opacity: 0.8;\n        cursor: pointer;\n    }\n\n    a, button, input {\n        outline: none;\n    }\n`","import styled from 'styled-components'\nimport mediaQuery from 'styled-media-query'\n\nexport const mediaMobile = mediaQuery.lessThan(\"medium\")\n\ninterface FlexBoxProps {\n    styled: {\n        [k : string] : string\n    }\n}\n\nexport const FlexBox = styled.div<FlexBoxProps>`\n    display: flex;\n    justify-content: ${(props) => props.styled.justify_content};\n    align-items: ${(props) => props.styled.align_items};\n`\n\ninterface buttonProps {\n    styled: {\n        [k : string] : string\n    }\n}\n\nexport const Button = styled.button<buttonProps>`\n    font-size: 1.4rem;\n    width: ${props => props.styled.width}px;\n    margin: 5px 0px;\n    padding: 10px 0px;\n    border: none;\n    border-radius: 3px;\n    color: #fff;\n    background-color: ${props => props.styled.bgColor};\n    margin: ${props => props.styled.margin};\n    padding: ${props => props.styled.padding};\n`","import styled from 'styled-components'\nimport constantStyle from '../../../style/styleModel'\nimport {mediaMobile} from '../../../style/commonStyle'\n\ninterface Style {\n    [k :string] : string\n}\n\nexport type ElementStyle = Partial<Style & Pick<constantStyle, 'display' | 'align_items' | 'justify_content' | 'flex_direction' | 'flex_wrap' | 'bgColor' | 'text_align'>>\n\ninterface WrapperProps {\n    styled: ElementStyle\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n    display:${props => props.styled.display};\n    align-items: ${props => props.styled.align_items};\n    justify-content: ${props => props.styled.justify_content};\n    flex-direction: ${props => props.styled.flex_direction};\n    flex-wrap: ${props => props.styled.flex_wrap};\n    max-width: ${props => props.styled.max_width};\n    min-width: ${props => props.styled.min_width};\n    width: ${props => props.styled.width};\n    max-height: ${props => props.styled.max_height};\n    min-height: ${props => props.styled.min_height};\n    height: ${props => props.styled.height};\n    background-color: ${props => props.styled.bgColor};\n    padding: ${props => props.styled.padding};\n    margin: ${props => props.styled.margin};\n    position: ${props => props.styled.position};\n    top: ${props => props.styled.top};\n    left: ${props => props.styled.left};\n    right: ${props => props.styled.right};\n    bottom: ${props => props.styled.bottom};\n    transform: ${props => props.styled.transform};\n    z-index: ${props => props.styled.z_index};\n    text-align: ${props => props.styled.text_align};\n`\n\nexport const withSPStyle = (Component : typeof Wrapper, spStyle: Style) => {\n    return styled(Component)`\n      ${mediaMobile`\n        ${spStyle}\n      `};\n    `;\n};\n\nexport default Wrapper","import styled from 'styled-components'\nimport {mediaMobile} from '../../../style/commonStyle'\n\nexport interface elementStyle {\n    width?: string,\n    height?: string\n}\n\ninterface ImgProps{\n    styled: elementStyle\n}\n\nconst Img = styled.img<ImgProps>`\n    width: ${props => props.styled.width};\n    height: ${props => props.styled.height};\n`\n\nexport const withSPStyle = (Component : typeof Img, spStyle: {[k: string] : string}) => {\n    return styled(Component)`\n      ${mediaMobile`\n        ${spStyle}\n      `};\n    `;\n};\n\nexport default Img","export const font_size = {\n    small: '1.2rem',\n    normal: '1.4rem',\n    large: '1.8rem'\n} as const\n\nexport const color = {\n    white: '#fff',\n    green: '#42b72a',\n    pink: '#FFEEFF',\n    purple: '#812990',\n} as const\n\nexport const borderColor = {\n    black: '#000000'\n}","import React from 'react'\nimport styled from 'styled-components'\nimport * as utilStyle from '../../../util/styles'\n\nexport type StyleProps = {\n    [k : string] : string\n}\n\ntype ButtonProps = {\n    styled: StyleProps\n} & React.ButtonHTMLAttributes<HTMLButtonElement>\n\nconst Button = styled.button<ButtonProps>`\n  font-size: ${props => props.styled.font_size || utilStyle.font_size.normal};\n  text_align: ${props => props.styled.text_align};\n  font-weight: bold;\n  color: ${props => props.styled.color || utilStyle.color.white};\n  border: ${props => props.styled.border || 'none'};\n  border-radius: 3px;\n  width: ${props => props.styled.width};\n  padding: ${props => props.styled.padding};\n  background-color: ${props => props.styled.bgColor};\n`\n\nexport type ButtonCustomProps = {\n  style?: StyleProps\n  props?: React.ButtonHTMLAttributes<HTMLButtonElement>\n  txt: string\n  clickHandler?: () => void\n}\n\nconst initialStyle = {\n    width: '280px',\n    padding: '10px 0',\n}\n\nexport const ButtonFactory  = (constantStyle : StyleProps) => (\n        ({\n            style = initialStyle,\n            props,\n            txt,\n            clickHandler,\n        } : ButtonCustomProps) => (\n                <Button styled={{...style, ...constantStyle}} \n                onClick={clickHandler} {...props}>{txt}</Button>\n        )\n)\n\nexport default Button","import styled from 'styled-components'\nimport constantStyle from '../../../style/styleModel'\nimport {mediaMobile} from '../../../style/commonStyle'\n\ninterface Style {\n    [k : string] : string\n}\n\nexport type ElementStyle = Partial<Style & Pick<constantStyle, 'font_size'>>\n\ninterface InputProps {\n    styled: ElementStyle\n}\n\nconst Input = styled.input<InputProps>`\n    font-size: ${props => props.styled.font_size};   \n    width: ${props => props.styled.width};\n    padding: ${props => props.styled.padding};\n    border: ${props => props.styled.border};\n    border-radius: ${props => props.styled.border_radius};\n    background-color: ${props => props.styled.bgColor};\n`\n\nexport const withSPStyle = (Component : typeof Input, spStyle: Style) => {\n    return styled(Component)`\n      ${mediaMobile`\n        ${spStyle}\n      `};\n    `;\n};\n\nexport default Input","import styled from 'styled-components'\nimport constantStyle from '../../../style/styleModel'\nimport {mediaMobile} from '../../../style/commonStyle'\n\ninterface Style {\n    [k: string] : string\n}\n\nexport type ElementStyle = Partial<Style & Pick<constantStyle, 'font_size' | 'font_weight' | 'text_align' >>\n\ninterface ParagraghProps {\n    styled: ElementStyle\n}\n\nexport const Paragragh = styled.p<ParagraghProps>`\n    font-size: ${props => props.styled.font_size};\n    font-weight: ${props => props.styled.font_weight};\n    text-align: ${props => props.styled.text_align};\n    padding: ${props => props.styled.padding};\n    color: ${props => props.styled.color};\n`\n\nexport const LineParagragh = styled(Paragragh)<ParagraghProps>`\n        position: relative;\n        overflow: hidden;\n        width: ${props => props.styled.wrapperWidth};\n        &::before,&::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            translateY: -50%; \n            width: ${props => props.styled.lineWidth};\n            border-bottom: 1px solid #ccd0d5;\n        }\n        &::before {\n            right: 63%;\n        }\n        &::after {\n            left: 63%;\n        }\n`\n\nexport const withSPStyle = (Component : typeof LineParagragh, spStyle: Style) => {\n    return styled(Component)`\n      ${mediaMobile`\n        ${spStyle}\n      `};\n    `;\n};","import React from 'react'\nimport styled from 'styled-components'\nimport Input, {ElementStyle as InputStyle} from '../../Atoms/Input'\nimport {Paragragh,ElementStyle as ParagraghStyle} from '../../Atoms/Paragragh'\nimport Wrapper, {ElementStyle as WrapperStyle} from '../../Atoms/Wrapper'\n\nexport interface Props {\n    inputs: {\n        title?: string\n        props?: React.InputHTMLAttributes<HTMLInputElement>\n        inputStyle?: InputStyle\n        inputTitleStyle?: ParagraghStyle\n        wrapperStyle?: WrapperStyle\n    }[]\n    baseInputTitleStyle?: ParagraghStyle\n    baseInputStyle?: InputStyle\n    baseWrapperStyle?: WrapperStyle\n}\n\nconst InputTitle = styled(Paragragh)`\n    width: ${props => props.styled.width}\n`\n\n\nconst InputSections : React.FC<Props> = (props) => (\n    <React.Fragment>\n        {\n            props.inputs.map((input, index) => (\n                <Wrapper styled={{...props.baseWrapperStyle, ...input.wrapperStyle}} key={index}>\n                    <InputTitle styled={{...props.baseInputTitleStyle, ...input.inputTitleStyle}}>{input.title}</InputTitle>\n                    <Input styled={{...props.baseInputStyle, ...input.inputStyle}} {...input.props}/>\n                </Wrapper>\n            ))\n        }\n    </React.Fragment>\n)\n\nexport default InputSections","import React from 'react'\nimport Button, {StyleProps as ButtonStyle} from '../../Atoms/Button'\nimport Wrapper, {ElementStyle as WrapperStyle} from '../../Atoms/Wrapper'\n\nexport interface Props {\n    buttons: {\n        buttonWrapperStyle?: WrapperStyle\n        buttonStyle?: ButtonStyle\n        buttonTxt: string\n        clickHandler?: React.MouseEventHandler<HTMLButtonElement>\n        props?: React.ButtonHTMLAttributes<HTMLButtonElement> & {data: string}\n    }[] \n    baseButtonWrapperStyle?: WrapperStyle\n    baseButtonStyle?: ButtonStyle\n}\n\nconst Buttons : React.FC<Props> = props => (\n    <React.Fragment>\n        {\n            props.buttons.map((button,index) => (\n                <Wrapper key={index} styled={{...props.baseButtonWrapperStyle, ...button.buttonWrapperStyle}}>\n                    <Button styled={{...props.baseButtonStyle, ...button.buttonStyle}} onClick={button.clickHandler} {...button.props}>{button.buttonTxt}</Button>\n                </Wrapper>\n            ))\n        }\n    </React.Fragment>\n)\n\nexport default Buttons","import React, {useState, useEffect} from 'react'\nimport Wrapper from '../../../Atoms/Wrapper'\nimport Img from '../../../Atoms/Img'\nimport Button from '../../../Atoms/Button'\nimport InputSections from '../../../Molecules/InputSectoins'\nimport Buttons from '../../../Molecules/Buttons'\nimport defaultImage from '../../../../style/img/defaultImg.jpg'\nimport {Link} from 'react-router-dom'\nimport { membersState } from '../../../../reducers/membersReducer';\n\nconst wrapperStyle = {\n    width: '320px', \n    margin:'0 auto', \n}\n\nconst baseInputStyle = {\n    font_size: '1.4rem' as '1.4rem', \n    padding: '5px 8px', \n    width: '320px',\n    border: '1px solid #dddfe2',\n    border_radius: '3px',\n    bgColor: '#fff' as '#fff'\n}\n\nconst baseInputWrapperStyle = {\n    margin: '20px auto 0',\n    text_align: 'center' as 'center'\n}\n\nconst baseInputTitleStyle = {\n    font_size: '1.4rem' as '1.4rem',\n    padding: '10px 0'\n}\n\nconst baseButtonStyle = {\n    padding: '20px', \n    width: '320px', \n    font_size: '1.4rem' as '1.4rem', \n    font_weight: 'bold' as 'bold', \n    color: '#fff', \n    bgColor: '#bf87c1' as '#bf87c1'\n}\n\nconst initialState = {\n    image: '',\n    name: ['', ''],\n    sailium: ['', ''],\n    segment: '',\n    dateOfBirth : '',\n    blod: '',\n    height: '',\n    hash:[''],\n}\n\nexport type MemberState = typeof initialState\n\ninterface Props {\n    members: membersState\n    upload: (data: MemberState) => void\n    getAllMembers:() => void\n}\n\nconst AdminForm: React.FC<Props> = props => {\n    useEffect(() => {\n        const getAllMembers = props.getAllMembers\n        getAllMembers()\n    },[props.getAllMembers])\n    const [memberState, memberChange] = useState<MemberState>(initialState)\n\n    const fileSetHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if(event.target.files !== null && event.target.files.length > 0) {\n            let file = event.target.files[0]\n            let fileReader = new FileReader()\n            fileReader.onloadend = function(){\n                let dataUri = this.result\n                if(typeof dataUri === 'string'){\n                    memberChange({\n                        ...memberState,\n                        image: dataUri\n                    })\n                }\n            }\n            fileReader.readAsDataURL(file)\n        }\n    }\n\n    const setStringHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let key = event.target.name\n        memberChange({\n            ...memberState,\n            [key] : event.target.value\n        })\n    }\n\n    const setArrayHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let key = event.target.name\n        let value = event.target.value.split(',')\n        memberChange({\n            ...memberState,\n            [key] : value\n        })\n    }\n\n    const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const postData = {\n            ...memberState,\n        }\n        props.upload(postData)\n        memberChange(initialState)\n        if(document.querySelector('input[name=\"image\"]') !== null) {\n            let input: HTMLInputElement = document.querySelector('input[name=\"image\"]') as HTMLInputElement\n            input.value = ''\n        }\n    }\n\n    const InputSectionsProps = {\n        inputs: [\n            {\n                title: 'Image',\n                props: {\n                    accept: '.png,.jpg,.jpeg',\n                    placeholder: 'Image',\n                    type: 'file',\n                    name: 'image',\n                    required: true,\n                    onChange: fileSetHandler,\n                },\n            },\n            {\n                title: 'Name',\n                props: {\n                    placeholder: 'names *arguments2',\n                    type: 'text',\n                    name: 'name',\n                    value: memberState.name,\n                    required: true,\n                    onChange: setArrayHandler,\n                }\n            },\n            {\n                title: 'Sailium',\n                props: {\n                    placeholder: 'sailium',\n                    type: 'text',\n                    name: 'sailium',\n                    value: memberState.sailium,\n                    required: true,\n                    onChange: setArrayHandler,\n                }\n            },\n            {\n                title: 'Segment',\n                props: {\n                    placeholder: 'segment',\n                    type: 'text',\n                    name: 'segment',\n                    value: memberState.segment,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'DateOfBirth',\n                props: {\n                    placeholder: 'dateOfBirth',\n                    type: 'text',\n                    name: 'dateOfBirth',\n                    value: memberState.dateOfBirth,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'BlodType',\n                props: {\n                    placeholder: 'blodType',\n                    type: 'text',\n                    name: 'blod',\n                    value: memberState.blod,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'Height',\n                props: {\n                    placeholder: 'height',\n                    type: 'text',\n                    name: 'height',\n                    value: memberState.height,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'Hash',\n                props: {\n                    placeholder: 'hash',\n                    type: 'text',\n                    name: 'hash',\n                    value: memberState.hash,\n                    required: true,\n                    onChange: setArrayHandler,\n                }\n            },\n        ],\n        baseInputStyle,\n        baseInputWrapperStyle,\n        baseInputTitleStyle\n    }\n\n    const ButtonsProps = {\n        buttons: [\n            {\n                buttonTxt: 'メンバー登録',\n            },\n        ],\n        baseButtonWrapperStyle: {margin: '30px 0 0'},\n        baseButtonStyle\n    }\n\n    const Imgsrc = memberState.image ? memberState.image : defaultImage\n    return(\n        <Wrapper styled={{...wrapperStyle}}>\n            <Img src={Imgsrc} styled={{width: '320px'}}/>\n            <form onSubmit={(e) => submitHandler(e)} >\n                <InputSections {...InputSectionsProps} />\n                <Buttons {...ButtonsProps} />\n            </form>\n            <Wrapper styled={{margin: '30px 0 0'}}>\n                <Link to={\"/admin/update\"}><Button styled={{...baseButtonStyle, bgColor: '#42b72a' as '#42b72a'}}>メンバー情報更新ページへ</Button></Link>\n            </Wrapper>\n        </Wrapper>\n    )\n}\n\nexport default AdminForm","import { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport AdminForm, {MemberState} from '../../../../components/Organisms/Form/AdminForm'\nimport * as Action from '../../../../actions/members/membersActions'\nimport { membersState as Members} from '../../../../reducers/membersReducer'\n\nconst mapStateToProps = ({members}: {members: Members}) => ({\n    members: {...members}\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    upload: (member: MemberState) => {\n        dispatch(Action.addMember(member))\n    },\n    getAllMembers: () => {\n        dispatch(Action.getAllMembers())\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminForm)","import styled from 'styled-components'\nimport constantStyle from '../../../style/styleModel'\nimport {mediaMobile} from '../../../style/commonStyle'\n\ninterface Style {\n    [k : string] : string\n}\n\nexport type ElementStyle = Partial<Style & Pick<constantStyle, 'font_size' | 'display'>>\n\ninterface SelectProps {\n    styled: ElementStyle\n}\n\nconst Select = styled.select<SelectProps>`\n    font-size: ${props => props.styled.font_size};   \n    width: ${props => props.styled.width};\n    padding: ${props => props.styled.padding};\n    border: ${props => props.styled.border};\n    color: ${props => props.styled.color};\n    border-radius: ${props => props.styled.border_radius};\n    background-color: ${props => props.styled.bgColor};\n    appearance: ${props => props.styled.appearance};\n`\n\nexport const withSPStyle = (Component : typeof Select, spStyle: Style) => {\n    return styled(Component)`\n      ${mediaMobile`\n        ${spStyle}\n      `};\n    `;\n};\n\nexport default Select","import styled from 'styled-components'\nimport constantStyle from '../../../style/styleModel'\nimport {mediaMobile} from '../../../style/commonStyle'\n\ninterface Style {\n    [k : string] : string\n}\n\nexport type ElementStyle = Partial<Style & Pick<constantStyle, 'font_size'>>\n\ninterface OptionProps {\n    styled: ElementStyle\n}\n\nconst Option = styled.option<OptionProps>`\n    font-size: ${props => props.styled.font_size};   \n    width: ${props => props.styled.width};\n    padding: ${props => props.styled.padding};\n    border: ${props => props.styled.border};\n    border-radius: ${props => props.styled.border_radius};\n    background-color: ${props => props.styled.bgColor};\n`\n\nexport const withSPStyle = (Component : typeof Option, spStyle: Style) => {\n    return styled(Component)`\n      ${mediaMobile`\n        ${spStyle}\n      `};\n    `;\n};\n\nexport default Option","import React from 'react'\nimport Wrapper, {ElementStyle as WrapperStyle} from '../../Atoms/Wrapper'\nimport Select, {ElementStyle as SelectStyle} from '../../Atoms/Select'\nimport Option, {ElementStyle as OptionStyle} from '../../Atoms/Option'\n\nexport interface Props {\n    options: {\n        optionStyle?: OptionStyle\n        txt: string\n        props?: React.OptionHTMLAttributes<HTMLOptionElement>\n    }[]\n    baseOptionStyle?: OptionStyle\n    wrapperStyle?: WrapperStyle\n    selectStyle?: SelectStyle\n    selectProps?: React.SelectHTMLAttributes<HTMLSelectElement>\n}\n\nconst Selects: React.FC<Props> = (props) => (\n    <Wrapper styled={{...props.wrapperStyle}}>\n        <Select styled={{...props.selectStyle}} {...props.selectProps}>\n            {\n                props.options.map((option, index) => (\n                    <Option key={index} styled={{...props.baseOptionStyle, ...option.optionStyle}} {...option.props}>{option.txt}</Option>\n                ))\n            }\n        </Select>\n    </Wrapper>\n)\n\nexport default Selects","import React, {useState, useEffect} from 'react'\nimport Wrapper from '../../../Atoms/Wrapper'\nimport Img from '../../../Atoms/Img'\nimport Button from '../../../Atoms/Button'\nimport InputSections from '../../../Molecules/InputSectoins'\nimport Buttons from '../../../Molecules/Buttons'\nimport Selects from '../../../Molecules/Selects'\nimport defaultImage from '../../../../style/img/defaultImg.jpg'\nimport { membersState } from '../../../../reducers/membersReducer'\nimport {Link}from 'react-router-dom'\nimport useReactRouter from 'use-react-router'\n\nconst wrapperStyle = {\n    width: '320px', \n    margin:'0 auto', \n}\n\nconst baseInputStyle = {\n    font_size: '1.4rem' as '1.4rem', \n    padding: '5px 8px', \n    width: '320px',\n    border: '1px solid #dddfe2',\n    border_radius: '3px',\n    bgColor: '#fff' as '#fff'\n}\n\nconst baseInputWrapperStyle = {\n    margin: '20px auto 0',\n    text_align: 'center' as 'center'\n}\n\nconst baseInputTitleStyle = {\n    font_size: '1.4rem' as '1.4rem',\n    padding: '10px 0'\n}\n\nconst baseButtonStyle = {\n    padding: '20px', \n    width: '320px', \n    font_size: '1.4rem' as '1.4rem', \n    font_weight: 'bold' as 'bold', \n    color: '#fff', \n    bgColor: '#bf87c1' as '#bf87c1'\n}\n\ninterface Props {\n    members: membersState\n    getAllMembers: () => void\n    update: (member: typeof initialState) => void\n    delete: (memberId: string) => void\n}\n\nconst initialState = {\n    _id: '',\n    image: '',\n    name: ['',''],\n    sailium: ['', ''],\n    segment: '',\n    dateOfBirth : '',\n    blod: '',\n    height: '',\n    hash:['']\n}\n\nexport type MemberState = typeof initialState\n\nconst UpdateForm: React.FC<Props> = props => {\n    const {history} = useReactRouter()\n    const [memberState, memberChange] = useState(initialState)\n    const [buttonIndex, setButtonIndex] = useState(1)\n\n    const setIndex = (index: 1 | 2) => {\n        setButtonIndex(index)\n    }\n\n    useEffect(() => {\n        const getAllMembers = props.getAllMembers\n        getAllMembers()\n    },[props.getAllMembers])\n\n    useEffect(() => {\n        console.log(props.members.length)\n        if(props.members.length < 1){\n            history.push(\"/admin\")\n        } else {\n            let initialMemberState = {\n                _id: props.members[0]._id,\n                image: props.members[0].image,\n                name: props.members[0].name,\n                sailium: props.members[0].sailium,\n                segment: props.members[0].segment,\n                dateOfBirth: props.members[0].dateOfBirth,\n                blod: props.members[0].blod,\n                height: props.members[0].height,\n                hash: props.members[0].hash,\n            }\n            memberChange(initialMemberState)\n        }\n    },[props.members, history])\n\n    const clearInputValue = (query : string) => {\n        document.querySelector<HTMLInputElement>(`${query}`)!.value = ''\n    }\n\n    const selectChangeHanlder = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        props.members.forEach((member,index) => {\n            if(member._id === e.target.value) {\n                memberChange({\n                    ...props.members[index]\n                })\n            }\n        })\n        clearInputValue('input[name=\"image\"]')\n    }\n\n    const fileSetHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if(event.target.files !== null && event.target.files.length > 0) {\n            let file = event.target.files[0]\n            let fileReader = new FileReader()\n            fileReader.onloadend = function(){\n                let dataUri = this.result\n                if(typeof dataUri === 'string'){\n                    memberChange({\n                        ...memberState,\n                        image: dataUri\n                    })\n                }\n            }\n            fileReader.readAsDataURL(file)\n        }\n    }\n\n    const setStringHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let key = event.target.name\n        memberChange({\n            ...memberState,\n            [key] : event.target.value\n        })\n    }\n\n    const setArrayHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let key = event.target.name\n        let value = event.target.value.split(',')\n        memberChange({\n            ...memberState,\n            [key] : value\n        })\n    }\n\n    const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        if(buttonIndex === 1) {\n            const updateData = {\n                ...memberState,\n            }\n            props.update(updateData)\n        } else {\n            props.delete(memberState._id)\n        }\n        clearInputValue('input[name=\"image\"]')\n    }\n\n    const InputSectionsProps = {\n        inputs: [\n            {\n                title: 'Image',\n                props: {\n                    accept: '.png,.jpg,.jpeg',\n                    placeholder: 'Image',\n                    type: 'file',\n                    name: 'image',\n                    onChange: fileSetHandler,\n                },\n            },\n            {\n                title: 'Name',\n                props: {\n                    placeholder: 'names *arguments2',\n                    type: 'text',\n                    name: 'name',\n                    value: memberState.name,\n                    required: true,\n                    onChange: setArrayHandler,\n                }\n            },\n            {\n                title: 'Sailium',\n                props: {\n                    placeholder: 'sailium',\n                    type: 'text',\n                    name: 'sailium',\n                    value: memberState.sailium,\n                    required: true,\n                    onChange: setArrayHandler,\n                }\n            },\n            {\n                title: 'Segment',\n                props: {\n                    placeholder: 'segment',\n                    type: 'text',\n                    name: 'segment',\n                    value: memberState.segment,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'DateOfBirth',\n                props: {\n                    placeholder: 'dateOfBirth',\n                    type: 'text',\n                    name: 'dateOfBirth',\n                    value: memberState.dateOfBirth,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'BlodType',\n                props: {\n                    placeholder: 'blodType',\n                    type: 'text',\n                    name: 'blod',\n                    value: memberState.blod,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'Height',\n                props: {\n                    placeholder: 'height',\n                    type: 'text',\n                    name: 'height',\n                    value: memberState.height,\n                    required: true,\n                    onChange: setStringHandler,\n                }\n            },\n            {\n                title: 'Hash',\n                props: {\n                    placeholder: 'hash',\n                    type: 'text',\n                    name: 'hash',\n                    value: memberState.hash,\n                    required: true,\n                    onChange: setArrayHandler,\n                }\n            },\n        ],\n        baseInputStyle,\n        baseInputWrapperStyle,\n        baseInputTitleStyle\n    }\n\n    const ButtonsProps = {\n        buttons: [\n            {\n                buttonTxt: 'メンバー情報更新',\n                clickHandler: () => setIndex(1) \n            },\n            {\n                buttonTxt: '選択しているメンバーを削除',\n                clickHandler: () => setIndex(2),\n                buttonStyle: { bgColor: '#DB7093' as '#DB7093'}\n            }\n        ],\n        baseButtonWrapperStyle: {margin: '30px 0 0'},\n        baseButtonStyle\n    }\n\n    const createOptions = () => {\n        const options = props.members.map(member => (\n            {\n                txt: member.name[0],\n                props: {\n                    value: member._id\n                }\n            }\n        ))\n        return options\n    }\n\n    const SelectsProps = {\n        options: createOptions(),\n        selectProps: {\n            value: memberState._id,\n            onChange: selectChangeHanlder\n        },\n        selectStyle: {\n            width: '320px',\n            padding: '10px',\n            font_size: '1.4rem' as '1.4rem',\n            border: '3px solid #dddfe2',\n        },\n        wrapperStyle: {\n            margin: '0 0 20px'\n        }\n    }\n\n    const Imgsrc = memberState.image ? memberState.image : defaultImage\n    return(\n        <Wrapper styled={{...wrapperStyle}}>\n            <Selects {...SelectsProps} />\n            <Img src={Imgsrc} styled={{width: '320px'}}/>\n            <form onSubmit={(e) => submitHandler(e)} >\n                <InputSections {...InputSectionsProps} />\n                <Buttons {...ButtonsProps} />\n            </form>\n            <Wrapper styled={{margin: '30px 0 0'}}>\n                <Link to={\"/admin/upload\"}><Button styled={{...baseButtonStyle, bgColor: '#42b72a' as '#42b72a'}}>メンバー追加ページへ</Button></Link>\n            </Wrapper>\n        </Wrapper>\n    )\n}\n\nexport default UpdateForm","import { connect } from 'react-redux'\nimport { Dispatch } from 'redux'\nimport UpdateForm, {MemberState} from '../../../../components/Organisms/Form/UpdateForm'\nimport {membersState} from '../../../../reducers/membersReducer'\nimport * as Action from '../../../../actions/members/membersActions'\n\nconst mapStateToProps = ({members}: {members:membersState}) => ({\n    ...members\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    getAllMembers: () => {\n        dispatch(Action.getAllMembers())\n    },\n    update: (member: MemberState) => {\n        dispatch(Action.updateMember(member))\n    },\n    delete: (memberId: string) => {\n        dispatch(Action.deleteMember(memberId))\n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateForm)","import React, { useEffect } from 'react'\nimport Wrapper from '../../Atoms/Wrapper'\nimport AdminForm from '../../../cotainers/Organisms/Form/AdminForm'\nimport UpdateForm from '../../../cotainers/Organisms/Form/UpdateForm'\nimport { Helmet } from 'react-helmet'\nimport {Route, Switch} from 'react-router'\nimport useReactRouter from 'use-react-router'\nimport { MembersState } from '../../../reducers/membersReducer'\n\ninterface Props {\n    members: MembersState\n}\n\nconst Admin = (props: Props) => {\n    console.log(props.members)\n    const {history} = useReactRouter()\n    useEffect(() => {\n        const isStorageToken = localStorage.getItem('ticket') !== null\n        const isPermission = props.members.isPermission\n        if(isStorageToken !== true || isPermission !== true) {\n            history.push('/login')\n        }\n    })\n\n    return(\n        <>\n            <Helmet>\n                <title>\n                    Nogizaka-Dictinary ~AdminPage~\n                </title>\n            </Helmet>\n\n            <Wrapper styled={{min_height: '100vh'}}>\n                <Switch>\n                    <Route path=\"/admin/update\" component={UpdateForm}/>\n                    <Route path=\"/\" component={AdminForm} />\n                </Switch>\n            </Wrapper>\n        </>\n    )\n}\n\nexport default Admin","import { connect } from 'react-redux'\nimport Admin from '../../../components/Pages/Admin'\nimport { State } from '../../../reducers'\n\nconst mapStateToProps = (state: State) => ({\n    members: state.members\n})\n\nexport default connect(mapStateToProps, {})(Admin)","import React from 'react';\nimport styled from 'styled-components'\nimport { Redirect, Route, Switch } from 'react-router'\nimport { GlobalStyle } from '../style/BaseStyle'\nimport Wrapper from './Atoms/Wrapper'\nimport Admin from '../cotainers/Pages/Admin'\nimport ClipLoader from 'react-spinners/ClipLoader'\nimport { MembersState } from '../reducers/membersReducer';\n\nconst LoadingWrapper = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 10000;\n  background-color: rgba(255,255,255,0.5);\n`\n\nconst wrapperStyle = {\n  position: 'absolute',\n  right: '0',\n  left: '0',\n  top: '50%',\n  transform: 'translateY(-50%)',\n  text_align: 'center',\n  z_index: '100000'\n} as const\n\ninterface Props {\n  members: MembersState\n}\n\nconst App: React.FC<Props> = props => {\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper styled={{bgColor:'#F9F9F9',min_height:\"100vh\"}}>\n      {\n        props.members.loading? \n        <LoadingWrapper>\n          <Wrapper styled={{...wrapperStyle}}>\n            <ClipLoader size={200} color={\"#9370db\"} loading={true} />\n          </Wrapper>\n        </LoadingWrapper>\n        : null\n      }\n      \n        <Switch>\n          <Route path=\"/admin\" component={Admin} />\n          <Redirect to=\"/login\" />\n        </Switch>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App;\n","import { connect } from 'react-redux'\nimport App from '../components/App'\nimport { MembersState } from '../reducers/membersReducer'\n\nconst mapStateToProps = ({members} : {members:MembersState}) => ({\n    members\n})\n\nexport default connect(mapStateToProps, {})(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { sagaMiddleWare } from './store'\nimport rootSaga from './saga' \nimport App from './cotainers/App';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n    </Provider>, \n    document.getElementById('root')\n);\n\nsagaMiddleWare.run(rootSaga)\n"],"sourceRoot":""}